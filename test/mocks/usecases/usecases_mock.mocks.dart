// Mocks generated by Mockito 5.2.0 from annotations
// in riverpod_boilerplate/test/mocks/usecases/usecases_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_boilerplate/domain/enums/account_type.dart' as _i6;
import 'package:riverpod_boilerplate/domain/models/user_context/user_context.dart'
    as _i9;
import 'package:riverpod_boilerplate/domain/states/core/theme/theme_state.dart'
    as _i3;
import 'package:riverpod_boilerplate/domain/states/login/login_state.dart'
    as _i2;
import 'package:riverpod_boilerplate/domain/usecases/auth/auth_usecases.dart'
    as _i4;
import 'package:riverpod_boilerplate/domain/usecases/storage/theme/theme_storage_usecases.dart'
    as _i7;
import 'package:riverpod_boilerplate/domain/usecases/storage/user_context/user_context_usecases.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLoginState_0 extends _i1.Fake implements _i2.LoginState {}

class _FakeThemeState_1 extends _i1.Fake implements _i3.ThemeState {}

/// A class which mocks [LoginUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUser extends _i1.Mock implements _i4.LoginUser {
  MockLoginUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginState> call(_i6.AccountType? accountType) =>
      (super.noSuchMethod(Invocation.method(#call, [accountType]),
              returnValue: Future<_i2.LoginState>.value(_FakeLoginState_0()))
          as _i5.Future<_i2.LoginState>);
}

/// A class which mocks [LogoutUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUser extends _i1.Mock implements _i4.LogoutUser {
  MockLogoutUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> call(_i6.AccountType? accountType) =>
      (super.noSuchMethod(Invocation.method(#call, [accountType]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}

/// A class which mocks [ReadTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockReadTheme extends _i1.Mock implements _i7.ReadTheme {
  MockReadTheme() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.ThemeState> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue: Future<_i3.ThemeState>.value(_FakeThemeState_1()))
          as _i5.Future<_i3.ThemeState>);
}

/// A class which mocks [WriteTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockWriteTheme extends _i1.Mock implements _i7.WriteTheme {
  MockWriteTheme() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> call(_i3.ThemeState? themeState) =>
      (super.noSuchMethod(Invocation.method(#call, [themeState]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}

/// A class which mocks [ReadUserContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockReadUserContext extends _i1.Mock implements _i8.ReadUserContext {
  MockReadUserContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i9.UserContext?> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue: Future<_i9.UserContext?>.value())
          as _i5.Future<_i9.UserContext?>);
}

/// A class which mocks [WriteUserContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockWriteUserContext extends _i1.Mock implements _i8.WriteUserContext {
  MockWriteUserContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> call(_i9.UserContext? userContext) =>
      (super.noSuchMethod(Invocation.method(#call, [userContext]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}

/// A class which mocks [RemoveUserContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveUserContext extends _i1.Mock implements _i8.RemoveUserContext {
  MockRemoveUserContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> call() => (super.noSuchMethod(Invocation.method(#call, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}
